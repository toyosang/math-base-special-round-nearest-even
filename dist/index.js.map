{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isInfinite = require( '@stdlib/math-base-assert-is-infinite' );\nvar floor = require( '@stdlib/math-base-special-floor' );\n\n\n// MAIN //\n\n/**\n* Rounds a double-precision floating-point number to the nearest integer value with ties rounding to the nearest even integer.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = roundNearestEven( -3.5 );\n* // returns -4.0\n*\n* @example\n* var v = roundNearestEven( -4.2 );\n* // returns -4.0\n*\n* @example\n* var v = roundNearestEven( -4.5 );\n* // returns -4.0\n*\n* @example\n* var v = roundNearestEven( -4.6 );\n* // returns -5.0\n*\n* @example\n* var v = roundNearestEven( 9.99999 );\n* // returns 10.0\n*\n* @example\n* var v = roundNearestEven( 8.5 );\n* // returns 8.0\n*\n* @example\n* var v = roundNearestEven( 9.5 );\n* // returns 10.0\n*\n* @example\n* var v = roundNearestEven( 9.2 );\n* // returns 9.0\n*\n* @example\n* var v = roundNearestEven( 0.0 );\n* // returns 0.0\n*\n* @example\n* var v = roundNearestEven( -0.0 );\n* // returns -0.0\n*\n* @example\n* var v = roundNearestEven( Infinity );\n* // returns Infinity\n*\n* @example\n* var v = roundNearestEven( -Infinity );\n* // returns -Infinity\n*\n* @example\n* var v = roundNearestEven( NaN );\n* // returns NaN\n*/\nfunction roundNearestEven( x ) {\n\tvar frac;\n\tvar int;\n\n\tif ( isnan( x ) || isInfinite( x ) || x === 0.0 ) {\n\t\treturn x;\n\t}\n\tint = floor( x );\n\tfrac = x - int;\n\tif ( frac > 0.5 ) { // Round up\n\t\treturn int + 1.0;\n\t}\n\tif ( frac < 0.5 ) { // Round down\n\t\treturn int;\n\t}\n\t// Tie case where we round to the nearest even integer:\n\treturn ( int % 2 === 0 ) ? int : int + 1.0;\n}\n\n\n// EXPORTS //\n\nmodule.exports = roundNearestEven;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Round a double-precision floating-point number to the nearest integer value with ties rounding to the nearest even integer.\n*\n* @module @stdlib/math-base-special-round-nearest-even\n*\n* @example\n* var roundNearestEven = require( '@stdlib/math-base-special-round-nearest-even' );\n*\n* var v = roundNearestEven( -3.5 );\n* // returns -4.0\n*\n* v = roundNearestEven( -4.2 );\n* // returns -4.0\n*\n* v = roundNearestEven( -4.5 );\n* // returns -4.0\n*\n* v = roundNearestEven( -4.6 );\n* // returns -5.0\n*\n* v = roundNearestEven( 9.99999 );\n* // returns 10.0\n*\n* v = roundNearestEven( 8.5 );\n* // returns 8.0\n*\n* v = roundNearestEven( 9.5 );\n* // returns 10.0\n*\n* v = roundNearestEven( 9.2 );\n* // returns 9.0\n*\n* v = roundNearestEven( 0.0 );\n* // returns 0.0\n*\n* v = roundNearestEven( -0.0 );\n* // returns -0.0\n*\n* v = roundNearestEven( Infinity );\n* // returns Infinity\n*\n* v = roundNearestEven( -Infinity );\n* // returns -Infinity\n*\n* v = roundNearestEven( NaN );\n* // returns NaN\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAQ,QAAS,iCAAkC,EACnDC,EAAa,QAAS,sCAAuC,EAC7DC,EAAQ,QAAS,iCAAkC,EA+DvD,SAASC,EAAkBC,EAAI,CAC9B,IAAIC,EACAC,EAEJ,OAAKN,EAAOI,CAAE,GAAKH,EAAYG,CAAE,GAAKA,IAAM,EACpCA,GAERE,EAAMJ,EAAOE,CAAE,EACfC,EAAOD,EAAIE,EACND,EAAO,GACJC,EAAM,EAETD,EAAO,IAIHC,EAAM,IAAM,EAHbA,EAGyBA,EAAM,EACxC,CAKAP,EAAO,QAAUI,ICvCjB,IAAII,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isnan", "isInfinite", "floor", "roundNearestEven", "x", "frac", "int", "main"]
}
